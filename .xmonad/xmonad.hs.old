-- Imports:
-------------------------------------------------- Base
import XMonad.Main (xmonad)
import XMonad.Core (terminal, modMask, workspaces,       
                    layoutHook, logHook, manageHook,     
                    normalBorderColor,focusedBorderColor)

import XMonad.Config (defaultConfig)
import XMonad.Operations (windows)
import XMonad.Util.Run (safeSpawn)

import Graphics.X11.Types (mod4Mask)
-------------------------------------------------- Workspaces
import XMonad.StackSet (focusUp, focusDown, swapUp, swapDown)
import XMonad.Actions.CycleWS (nextWS, prevWS, shiftToNext, shiftToPrev)
-------------------------------------------------- Windows
import XMonad.Hooks.FadeInactive (fadeInactiveLogHook)
import XMonad.Hooks.InsertPosition (insertPosition, Position(End), Focus(Newer))

import XMonad.Layout.NoBorders (noBorders)
import XMonad.Layout.Spacing (smartSpacing)
-------------------------------------------------- Xmobar
import XMonad.Util.Run (spawnPipe)
import XMonad.Hooks.DynamicLog (dynamicLogWithPP, xmobarPP,
                                ppOutput, ppExtras, ppTitle,
                                xmobarColor, shorten)
import XMonad.Util.Loggers (battery)

import XMonad.Hooks.ManageDocks (avoidStruts)
-------------------------------------------------- Utilities
import XMonad.Util.EZConfig (additionalKeysP)
import Data.Monoid ((<>))
import System.IO (hPutStrLn)

-- Config:

workspaceTags :: [String]
workspaceTags = ["web", "irc", "code", "shell"] ++ map show ([5..9] :: [Int])

main :: IO ()
main = do
  bar <- spawnPipe "xmobar ~/.xmonad/xmobarrc"
  xmonad $ defaultConfig {
    terminal   = "sakura",
    modMask    = mod4Mask, -- Super as mod key

    workspaces = workspaceTags,

    normalBorderColor  = "#dddddd",
    focusedBorderColor = "#ffaf00",

  -- Fade out inactive windows, set up xmobar
    logHook = fadeInactiveLogHook 0.9 >>
              dynamicLogWithPP xmobarPP { ppOutput = hPutStrLn bar,
                                          ppExtras = [battery],
                                          ppTitle  = xmobarColor "orange" "" . shorten 50},

  -- Construct new windows behind older ones
    manageHook = insertPosition End Newer <> manageHook defaultConfig,

  -- Remove borders, don't overlap with xmobar, space windows apart
    layoutHook = smartSpacing 6 . avoidStruts . noBorders
                 $ layoutHook defaultConfig }
  
    `additionalKeysP` [ ("M-<Left>",  prevWS),
                        ("M-<Right>", nextWS),
                        ("M-<Up>",    windows focusUp),
                        ("M-<Down>",  windows focusDown),

                        ("M-S-<Left>",  shiftToPrev >> prevWS),
                        ("M-S-<Right>", shiftToNext >> nextWS),
                        ("M-S-<Up>",    windows swapUp),
                        ("M-S-<Down>",  windows swapDown),

                        ("M-q", mapM_ (uncurry safeSpawn)
                                  [ ("killall", ["xmobar"]),
                                    ("xmonad",  ["--recompile"]),
                                    ("xmonad",  ["--restart"]) ]) ]
